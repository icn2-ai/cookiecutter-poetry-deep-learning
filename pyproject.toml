[project]
name = "cookiecutter-poetry-deep-learning"
version = "0.0.1"
description = "A python cookiecutter template for deep learning projects using Poetry for dependency management."
authors = [
    {name="Francisco A. Molina Bakhos", email="fmolina@icn2.net"}
]
repository = "https://github.com/aicn2/cookiecutter-poetry-deep-learning"
# TODO: To be developed
# documentation = "https://fpgmaas.github.io/cookiecutter-poetry/"
readme = "README.md"
keywords = ['cookiecutter', 'template', 'poetry', 'deep-learning']
packages = [
  {include = "cookiecutter_poetry"}
]
include = [
  '{{cookiecutter.project_name}}/**/*',
  'cookiecutter.json',
  'hooks/*'
]
requires-python= ">=3.9,<4.0"
dependencies=[
    "cookiecutter(>=2.1.1)"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pre-commit = "^2.20.0"
pytest-cookies = "^0.6.1"
tox = "^3.25.1"
deptry = "^0.16.2"
mypy = "^0.991"
pytest-cov = "^4.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.10"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project.scripts]
ccp = 'cookiecutter_poetry.cli:main'

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["cookiecutter_poetry"]

[tool.mypy]
files = ['cookiecutter_poetry']
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.deptry]
extend_exclude = [
  '.+/test_foo.py',
    '\{\{cookiecutter.project_name\}\}/\{\{cookiecutter.project_slug\}\}/'
    # These dependencies should be controlled by the pyproject.toml inside the indicated directory
]

[tool.deptry.per_rule_ignores]
DEP002 = ["cookiecutter"]

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
